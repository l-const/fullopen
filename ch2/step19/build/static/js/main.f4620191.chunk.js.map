{"version":3,"sources":["services/persons.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Notification","message","type","className","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","search","setSearch","notifMessage","setNotifMessage","mType","setMtype","useEffect","personService","initialPersons","setTimeout","sbstr","value","onChange","event","target","submit","preventDefault","fperson","find","p","name","number","undefined","window","confirm","returnedPeson","console","log","map","per","catch","error","persObj","resp","na_value","na_change","nu_value","nu_change","pers","filter","toLowerCase","includes","dropHandler","ev","style","backgroundColor","dropId","deluser","Filter","PersonForm","onSubmit","Persons","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4620191.chunk.js","sourcesContent":["import axios from \"axios\"\n\nconst baseUrl = \"/api/persons\"\n\nconst getAll = () => {\n    return axios\n            .get(baseUrl)\n            .then(response => response.data)\n}\n\nconst create = newObject => {\n    return axios\n            .post(baseUrl, newObject)\n            .then(response => response.data)\n            \n}\n\nconst update = (id, newObject) => {\n    return axios\n            .put(`${baseUrl}/${id}`, newObject)\n            .then(response => response.data)\n}\n\nconst drop = id => {\n    return axios\n            .delete(`${baseUrl}/${id}`)\n            .then(response => response.data)    \n}\n\nexport default { getAll, create, drop, update }","const Notification = ({message, type}) => {\n    if(message === null){\n        return null\n    }\n    let className=\"message\"\n\n    if(type === \"good\"){\n        className=\"message good\"\n    } else {\n        className=\"message bad\"\n    }\n\n    return (\n        <div className={className}>\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","// import axios from 'axios';\nimport React, {useEffect, useState } from 'react';\nimport personService from \"./services/persons\"\nimport Notification from \"./components/Notification\"\n\n\nconst App  = () => {\n  const [ persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [search, setSearch] = useState('')\n  const [notifMessage, setNotifMessage] = useState('')\n  const [mType, setMtype] = useState(\"good\")\n\n\n  useEffect(() => {\n    // first download of persons\n       personService\n        .getAll()\n        .then(initialPersons => {\n          setPersons(initialPersons)\n          setNotifMessage(\"Downloaded initial resources!\")\n          setMtype(\"good\")\n        })\n\n        setTimeout(()=> {\n          setNotifMessage(null)\n        }, 2000)\n        \n  }, [])\n\n  const handleNameChange = (event) => {\n    //console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  \n  const handleNumberChange = (event) => {\n    //console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  \n  const handleSearchChange = (event) => {\n    //console.log(event.target.value)\n    setSearch(event.target.value)\n\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    // if(persons.map( p => p.name).includes(newName)) {\n    //   alert(`${newName} is already added to phonebook`)\n    //   return\n    // }\n    \n    const fperson = persons.find(p => p.name === newName && p.number !== newNumber)\n    if( fperson  !== undefined) {\n      const confirm = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n      if(confirm){\n        personService\n          .update(fperson.id, {name:newName, number:newNumber})\n          .then(returnedPeson => {\n            console.log(returnedPeson)\n            setPersons(persons.map(per => per.name !== fperson.name ? per : returnedPeson))\n          \n          })\n          .catch(error => {\n              console.log(error.response.data.error)\n              setNotifMessage(`${error.response.data.error}`)\n              setMtype(\"bad\")\n              setTimeout(() => {\n                  setNotifMessage(null)\n              }, 2000)\n          })\n          return\n      }\n    }\n    \n    // HTTP POST (create new person)\n\n    const persObj = {name: newName, number: newNumber}\n    personService\n      .create(persObj)\n      .then(resp => {\n        console.log(resp)\n        setPersons([...persons, persObj])\n        setNotifMessage(` ${persObj.name} created successfully`)\n        setMtype(\"good\")\n        setTimeout(() => {\n          setNotifMessage(null)\n        }, 2000)\n      })\n      .catch(error => {\n        console.log(error.response.data.error)\n        setNotifMessage(`${error.response.data.error}`)\n        setMtype(\"bad\")\n        setTimeout(() => {\n          setNotifMessage(null)\n        }, 2000)\n      })\n  }\n\n  const filterNames = (sbstr) => {\n    return persons.filter(p => p.name.toLowerCase().includes(sbstr.toLowerCase()))\n  }\n\n  const dropUser = (ev) => {\n    ev.target.style.backgroundColor = \"#6960EC\";\n    const confirm = window.confirm(`Delete ${ev.target.name}`)\n\n    if (confirm){\n\n      const dropId = persons.find(p => p.name === ev.target.name).id\n      personService\n        .drop(dropId)\n        .then(deluser => {\n          //console.log(deluser)\n          setPersons(persons.filter(p => p.id !== dropId))\n          setNotifMessage(` ${ev.target.name} deleted successfully`)\n          setMtype(\"good\")  \n          setTimeout( () => {\n              setNotifMessage(null)\n            }, 2000)\n        })\n        .catch(error => {\n          setNotifMessage(`${ev.target.name} is already deleted! Error`)\n          setMtype(\"bad\")\n          setTimeout(() => {\n            setNotifMessage(null)\n          }, 4000)\n\n        }) \n    }\n\n  }\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notifMessage} type={mType}/>\n      <Filter value={search}  onChange={handleSearchChange}/>\n      <PersonForm \n        submit={addName} \n        na_value = {newName} na_change={handleNameChange}\n        nu_value={newNumber}  nu_change={handleNumberChange}\n       />\n      <h3>Numbers</h3>\n      <Persons pers={filterNames(search)} dropHandler={dropUser}/>\n    </div>\n  )\n} \n\nexport default App;\n\nconst Filter = ({value, onChange}) => {\n\n  return (\n    <div>\n    filter shown with <input value={value} onChange={onChange}/>\n    </div>\n  )\n}\n\nconst PersonForm = ({submit, na_value, na_change, nu_value, nu_change}) => {\n\n  return (\n   <form onSubmit={submit}>\n        <div>\n          name: <input  value={na_value} onChange={na_change}/>\n        </div>\n        <div>\n          number: <input value={nu_value} onChange={nu_change}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\n\nconst Persons = ({pers, dropHandler}) => {\n  return (\n    <div>\n      {pers.map(p => <p key={p.name}>{p.name + \" \" + p.number}<button key={p.id} name={p.name} onClick={dropHandler}>delete</button></p>)}\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\"\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}